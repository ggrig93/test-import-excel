version: '3'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: app
        restart: unless-stopped
        working_dir: /var/www/app
        links:
            - mysql
        volumes:
            - ./:/var/www/app
        environment:
            REDIS_HOST: ${REDIS_HOST}
            BROADCAST_DRIVER: ${BROADCAST_DRIVER}
            PUSHER_APP_ID: ${PUSHER_APP_ID}
            PUSHER_APP_KEY: ${PUSHER_APP_KEY}
            PUSHER_APP_SECRET: ${PUSHER_APP_SECRET}
            PUSHER_APP_CLUSTER: ${PUSHER_APP_CLUSTER}
        depends_on:
            - mysql
            - redis
            - rabbitmq
        networks:
            - app-network


    mysql:
        container_name: mysql
        image: mysql:latest
        restart: unless-stopped
        tty: true
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - app-network

    redis:
        image: redis:latest
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - app-network

    rabbitmq:
        image: rabbitmq:latest
        container_name: rabbitmq
        restart: unless-stopped
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - app-network

    nginx:
        image: nginx:latest
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
        depends_on:
            - app
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./:/var/www/app
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    db_data:
